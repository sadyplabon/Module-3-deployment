name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test --if-present

      - name: Lint/type check (optional)
        run: |
          npm run lint --if-present
          npm run typecheck --if-present

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      # Adjust if your build output is not "dist"
      - name: Build application
        run: npm run build --if-present

      - name: Upload build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app_build
          path: |
            dist/**
            package.json
            package-lock.json
            ecosystem.config.js
          if-no-files-found: warn

  docker-publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/module-3-app:${{ github.sha }}
          # optionally also: latest, or a semver tag

      - name: Bump K8s manifests (optional step)
        run: |
          # use yq/sed to update image tag in k8s manifests, commit to repo
          # Argo CD will detect the change and sync
